{"version":3,"sources":["assets/error.png","constants/theme.js","components/Loader.js","components/Error.js","components/Toast.js","utils/textProcessing.js","utils/validation.js","api/index.js","routes/Home/InputArea.js","routes/Home/ResultArea.js","routes/Home/index.js","index.js"],"names":["module","exports","palette","dark","primary","secondary","accent","primaryText","secondaryText","darkText","Container","Styled","div","props","theme","Loader","loading","color","Theme","size","Img","img","Message","h1","Close","a","Error","message","onClose","className","onClick","src","ErrorIcon","alt","Toast","style","fontWeight","margin","trimText","text","split","map","word","trim","filter","join","validateInputs","inputText","wordLimit","requestText","length","inputError","inputErrorMessage","generateStory","axios","get","params","Input","textarea","CountContainer","CountLabel","Count","WordLimitContaier","WordLimitLabel","h4","WordLimit","input","Button","InputArea","onInputChange","onWordLimitChange","charCount","placeholder","value","onChange","type","Story","ResultArea","result","Home","handleErrorDismiss","setState","serverError","handleResultDismiss","showResult","handleInputChange","target","handleWordLimitChange","handleGenerateStory","state","setTimeout","then","res","data","story","catch","err","this","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b325b55.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.61a7eb8b.png\";","export default {\r\n    palette: {\r\n        dark: {\r\n            primary: '#1F1B24',\r\n            secondary: '#352D3D',\r\n            accent: '#FF0266',\r\n            primaryText: '#FFFFFF',\r\n            secondaryText: '#C0C0C0',\r\n            darkText: '#1F1B24'\r\n        }\r\n    }\r\n};\r\n","import React from 'react';\r\nimport Styled from 'styled-components';\r\nimport PacmanLoader from 'react-spinners/PacmanLoader';\r\nimport Theme from '../constants/theme';\r\n\r\nconst Container = Styled.div`\r\n    background: ${props => props.theme.palette.dark.primary};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n`;\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Container>\r\n            <PacmanLoader loading color={Theme.palette.dark.accent} size={60} />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport Styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '../assets/error.png';\r\n\r\nconst Container = Styled.div`\r\n    background: ${props => props.theme.palette.dark.primary};\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n`;\r\n\r\nconst Img = Styled.img`\r\n    width: 180px;\r\n    height: auto;\r\n    margin-bottom: 16px;\r\n`;\r\n\r\nconst Message = Styled.h1`\r\n    color: ${props => props.theme.palette.dark.primaryText};\r\n    font-weight: 400;\r\n`;\r\n\r\nconst Close = Styled.a`\r\n    position: fixed;\r\n    top: 32px;\r\n    right: 32px;\r\n    color: ${props => props.theme.palette.dark.primaryText};\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Error = ({ message, onClose }) => {\r\n    return (\r\n        <Container>\r\n            <Close className=\"material-icons\" onClick={onClose}>\r\n                close\r\n            </Close>\r\n            <Img src={ErrorIcon} alt=\"Error\" />\r\n            <Message>{message}</Message>\r\n        </Container>\r\n    );\r\n};\r\n\r\nError.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\nimport Styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = Styled.div`\r\n    background: ${props => props.theme.palette.dark.secondary};\r\n    z-index: 100;\r\n    border-radius: 4px;\r\n    width: 250px;\r\n    min-height: 70px;\r\n    padding: 16px;\r\n    position: fixed;\r\n    bottom: 32px;\r\n    left: 32px;\r\n    transition: 0.2s all;\r\n`;\r\n\r\nconst Close = Styled.a`\r\n    position: absolute;\r\n    font-size: 18px;\r\n    top: 16px;\r\n    right: 16px;\r\n    color: ${props => props.theme.palette.dark.primaryText};\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Message = Styled.div`\r\n    display: flex;\r\n    margin-top: 20px;\r\n    font-size: 17px;\r\n    font-weight: 400;\r\n    color: ${props => props.theme.palette.dark.secondaryText};\r\n`;\r\n\r\nconst Toast = ({ message, onClose }) => {\r\n    return (\r\n        <Container>\r\n            <Close className=\"material-icons\" onClick={onClose}>\r\n                close\r\n            </Close>\r\n            <Message>\r\n                <a className=\"material-icons\">error</a>\r\n                <div>\r\n                    <span style={{ fontWeight: 600, margin: '0 6px' }}>Error : </span>\r\n                    <span>{message}</span>\r\n                </div>\r\n            </Message>\r\n        </Container>\r\n    );\r\n};\r\n\r\nToast.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Toast;\r\n","export const trimText = text => {\r\n    return text\r\n        .split(' ')\r\n        .map(word => word.trim())\r\n        .filter(word => word !== '')\r\n        .join(' ');\r\n};\r\n","import { trimText } from './textProcessing';\r\n\r\nexport const validateInputs = (inputText, wordLimit) => {\r\n    const requestText = trimText(inputText);\r\n\r\n    if (requestText.length < 100)\r\n        return {\r\n            inputError: true,\r\n            inputErrorMessage: 'I need atleast 100 characters to write a story.'\r\n        };\r\n\r\n    if (wordLimit < 150)\r\n        return {\r\n            inputError: true,\r\n            inputErrorMessage: 'Seriously? You want me to generate a story with less than 150 words!'\r\n        };\r\n\r\n    return {\r\n        inputError: false,\r\n        inputErrorMessage: '',\r\n        requestText\r\n    };\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const generateStory = (inputText, wordLimit) => {\r\n    return axios.get('/api', {\r\n        params: {\r\n            inputText,\r\n            wordLimit\r\n        }\r\n    });\r\n};\r\n","import React from 'react';\r\nimport Styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = Styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    box-sizing: border-box;\r\n    padding: 32px;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background: ${props => props.theme.palette.dark.primary};\r\n`;\r\n\r\nconst Input = Styled.textarea`\r\n    background: ${props => props.theme.palette.dark.secondary};\r\n    width: 80%;\r\n    height: 200px;\r\n    padding: 16px;\r\n    border-radius: 4px;\r\n    border: 0;\r\n    color: ${props => props.theme.palette.dark.secondaryText};\r\n    font-size: 24px;\r\n\r\n    :focus {\r\n        border: 0;\r\n        outline: none !important;\r\n    }\r\n`;\r\n\r\nconst CountContainer = Styled.div`\r\n    font-size: 18px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n`;\r\n\r\nconst CountLabel = Styled.div`\r\n    color: ${props => props.theme.palette.dark.primaryText}\r\n    margin-right: 16px;\r\n`;\r\n\r\nconst Count = Styled.div`\r\n    color: ${props => props.theme.palette.dark.secondaryText};\r\n`;\r\n\r\nconst WordLimitContaier = Styled.div`\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n`;\r\n\r\nconst WordLimitLabel = Styled.h4`\r\n    color: ${props => props.theme.palette.dark.secondaryText};\r\n    font-size: 20px;\r\n    margin-right: 18px;\r\n`;\r\n\r\nconst WordLimit = Styled.input`\r\n    background: ${props => props.theme.palette.dark.secondary};\r\n    color: ${props => props.theme.palette.dark.secondaryText};\r\n    border: 0;\r\n    width: 80px;\r\n    padding: 8px 16px;\r\n    font-size: 20px;\r\n\r\n    :focus {\r\n        border: 0;\r\n        outline: none !important;\r\n    }\r\n`;\r\n\r\nconst Button = Styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 8px 16px;\r\n    border-radius: 60px;\r\n    border: 1px solid ${props => props.theme.palette.dark.accent};\r\n    color: ${props => props.theme.palette.dark.accent};\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n        background: ${props => props.theme.palette.dark.accent};\r\n        color: ${props => props.theme.palette.dark.primaryText};\r\n    }\r\n`;\r\n\r\nconst InputArea = ({ inputText, wordLimit, onInputChange, onWordLimitChange, generateStory, charCount }) => {\r\n    return (\r\n        <Container>\r\n            <Container>\r\n                <Input\r\n                    placeholder=\"Begin your story and we will complete for you...\"\r\n                    value={inputText}\r\n                    onChange={onInputChange}\r\n                />\r\n                <CountContainer>\r\n                    <CountLabel>Character Count</CountLabel>\r\n                    <Count>{charCount}</Count>\r\n                </CountContainer>\r\n                <WordLimitContaier>\r\n                    <WordLimitLabel>How many characters do you want me to write?</WordLimitLabel>\r\n                    <WordLimit type=\"number\" placeholder=\"Count\" value={wordLimit} onChange={onWordLimitChange} />\r\n                </WordLimitContaier>\r\n                <Button onClick={generateStory}>Complete My Story</Button>\r\n            </Container>\r\n        </Container>\r\n    );\r\n};\r\n\r\nInputArea.propTypes = {\r\n    inputText: PropTypes.string.isRequired,\r\n    wordLimit: PropTypes.string.isRequired,\r\n    onInputChange: PropTypes.func.isRequired,\r\n    onWordLimitChange: PropTypes.func.isRequired,\r\n    generateStory: PropTypes.func.isRequired,\r\n    charCount: PropTypes.string.isRequired\r\n};\r\n\r\nexport default InputArea;\r\n","import React from 'react';\r\nimport Styled from 'styled-components';\r\n\r\nconst Container = Styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    background: ${props => props.theme.palette.dark.primary};\r\n`;\r\n\r\nconst Close = Styled.a`\r\n    position: fixed;\r\n    top: 32px;\r\n    right: 32px;\r\n    color: ${props => props.theme.palette.dark.primaryText};\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Story = Styled.div`\r\n    margin-top: 32px;\r\n    padding: 32px;\r\n    border-radius: 4px;\r\n    font-size: 24px;\r\n    color: ${props => props.theme.palette.dark.secondaryText};\r\n`;\r\n\r\nconst ResultArea = ({ result, onClose }) => {\r\n    return (\r\n        <Container>\r\n            <Close className=\"material-icons\" onClick={onClose}>\r\n                close\r\n            </Close>\r\n            <Story>{result}</Story>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ResultArea;\r\n","import React, { PureComponent } from 'react';\r\nimport { Loader, Error, Toast } from '../../components';\r\nimport { validateInputs } from '../../utils/validation';\r\nimport { trimText } from '../../utils/textProcessing';\r\nimport { generateStory } from '../../api';\r\nimport InputArea from './InputArea';\r\nimport ResultArea from './ResultArea';\r\n\r\nclass Home extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            wordLimit: 0,\r\n            charCount: 0,\r\n            inputText: '',\r\n            inputError: false,\r\n            inputErrorMessage: '',\r\n            serverError: false,\r\n            showResult: false,\r\n            result: ''\r\n        };\r\n    }\r\n\r\n    handleErrorDismiss = () => {\r\n        this.setState({\r\n            serverError: false,\r\n            inputError: false\r\n        });\r\n    };\r\n\r\n    handleResultDismiss = () => {\r\n        this.setState({\r\n            showResult: false\r\n        });\r\n    };\r\n\r\n    handleInputChange = ({ target }) => {\r\n        const { value } = target;\r\n        const charCount = trimText(value).length;\r\n        this.setState({\r\n            inputText: value,\r\n            charCount\r\n        });\r\n    };\r\n\r\n    handleWordLimitChange = ({ target }) => {\r\n        let { value } = target;\r\n        value = value < 0 ? 0 : value;\r\n        this.setState({\r\n            wordLimit: value\r\n        });\r\n    };\r\n\r\n    handleGenerateStory = () => {\r\n        const { inputText, wordLimit } = this.state;\r\n        const { inputError, inputErrorMessage, requestText } = validateInputs(inputText, wordLimit);\r\n        if (inputError) {\r\n            this.setState(\r\n                {\r\n                    inputError,\r\n                    inputErrorMessage\r\n                },\r\n                () => {\r\n                    setTimeout(this.handleErrorDismiss, 4000);\r\n                }\r\n            );\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n\r\n        generateStory(requestText, wordLimit)\r\n            .then(res => {\r\n                this.setState({\r\n                    loading: false,\r\n                    showResult: true,\r\n                    result: res.data.story\r\n                });\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    serverError: true,\r\n                    loading: false\r\n                });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            loading,\r\n            wordLimit,\r\n            inputText,\r\n            inputError,\r\n            inputErrorMessage,\r\n            serverError,\r\n            showResult,\r\n            result,\r\n            charCount\r\n        } = this.state;\r\n        return (\r\n            <>\r\n                {loading && <Loader />}\r\n                {!loading && !serverError && inputError && (\r\n                    <Toast message={inputErrorMessage} onClose={this.handleErrorDismiss} />\r\n                )}\r\n                {!loading && serverError && <Error message=\"Server Crashed\" onClose={this.handleErrorDismiss} />}\r\n                {!loading && !serverError && !showResult && (\r\n                    <InputArea\r\n                        inputText={inputText}\r\n                        wordLimit={`${wordLimit}`}\r\n                        onInputChange={this.handleInputChange}\r\n                        onWordLimitChange={this.handleWordLimitChange}\r\n                        generateStory={this.handleGenerateStory}\r\n                        charCount={charCount}\r\n                    />\r\n                )}\r\n                {!loading && showResult && <ResultArea result={result} onClose={this.handleResultDismiss} />}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { Home } from './routes';\nimport Theme from './constants/theme';\n\nconst App = () => {\n    return (\n        <ThemeProvider theme={Theme}>\n            <Home />\n        </ThemeProvider>\n    );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}